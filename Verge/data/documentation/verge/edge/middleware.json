{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"codeListing","syntax":"swift","code":["@Edge(middleware: .assert { $0 >= 0 }) var count: Int = 0"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/verge\/edge\/middleware"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Verge\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A handler that can modify a new state."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Edge.Middleware","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"symbolKind":"struct","externalID":"s:5Verge4EdgeV10MiddlewareV","extendedModule":"Verge","modules":[{"name":"Verge"}]},"hierarchy":{"paths":[["doc:\/\/Verge\/documentation\/Verge","doc:\/\/Verge\/documentation\/Verge\/Edge"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/init(_:)","doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/init(onSet:)"]},{"title":"Type Methods","identifiers":["doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/assert(_:_:)","doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/do(_:)","doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/empty()"]}],"references":{"doc://Verge/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Verge\/s8SendableP"},"doc://Verge/documentation/Verge/Edge/Middleware/assert(_:_:)":{"role":"symbol","title":"assert(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assert"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Edge","preciseIdentifier":"s:5Verge4EdgeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Middleware","preciseIdentifier":"s:5Verge4EdgeV10MiddlewareV"}],"abstract":[{"type":"text","text":"Raises an Swift.assertionFailure when its new value does not fit the condition."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/assert(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/edge\/middleware\/assert(_:_:)"},"doc://Verge/documentation/Verge":{"role":"collection","title":"Verge","abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge","kind":"symbol","type":"topic","url":"\/documentation\/verge"},"doc://Verge/documentation/Verge/Edge":{"role":"symbol","title":"Edge","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Edge"}],"abstract":[{"type":"text","text":"A wrapper structure provides equatability as False-negative."},{"type":"text","text":" "},{"type":"text","text":"Helpful in adding members which can’t conform to Equatable into a state due to the state of Store requiring Equatable."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Edge"}],"url":"\/documentation\/verge\/edge"},"doc://Verge/documentation/Verge/Edge/Middleware":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Edge.Middleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"abstract":[{"type":"text","text":"A handler that can modify a new state."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"url":"\/documentation\/verge\/edge\/middleware"},"doc://Verge/documentation/Verge/Edge/Middleware/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize a instance that performs multiple middlewares from start index"}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/edge\/middleware\/init(_:)"},"doc://Verge/documentation/Verge/Edge/Middleware/do(_:)":{"role":"symbol","title":"do(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`do`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Edge","preciseIdentifier":"s:5Verge4EdgeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Middleware","preciseIdentifier":"s:5Verge4EdgeV10MiddlewareV"}],"abstract":[{"type":"text","text":"Returns a Middleware that perform a closure"},{"type":"text","text":" "},{"type":"text","text":"It won’t mutate the value"}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/do(_:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/edge\/middleware\/do(_:)"},"doc://Verge/documentation/Verge/Edge/Middleware/init(onSet:)":{"role":"symbol","title":"init(onSet:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onSet"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize a instance that performs multiple middlewares from start index"}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/init(onSet:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/edge\/middleware\/init(onset:)"},"doc://Verge/documentation/Verge/Edge/Middleware/empty()":{"role":"symbol","title":"empty()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Edge","preciseIdentifier":"s:5Verge4EdgeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Middleware","preciseIdentifier":"s:5Verge4EdgeV10MiddlewareV"}],"abstract":[{"type":"text","text":"Returns a Middleware instance that does nothing."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Edge\/Middleware\/empty()","kind":"symbol","type":"topic","url":"\/documentation\/verge\/edge\/middleware\/empty()"}}}