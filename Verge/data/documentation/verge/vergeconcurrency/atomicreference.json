{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicReference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ValueType"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ValueType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/verge\/vergeconcurrency\/atomicreference"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Verge\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A concurrency utility class that supports locking-free synchronization on mutating an object"},{"type":"text","text":" "},{"type":"text","text":"reference. Unlike using a lock, concurrent read and write accesses to this class is allowed. At"},{"type":"text","text":" "},{"type":"text","text":"the same time, concurrent operations using the atomic functions provided by this class ensures"},{"type":"text","text":" "},{"type":"text","text":"synchronization correctness without the higher cost of locking."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"AtomicReference"}],"role":"symbol","title":"VergeConcurrency.AtomicReference","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicReference"}],"symbolKind":"class","externalID":"s:5Verge0A11ConcurrencyO15AtomicReferenceC","extendedModule":"Verge","modules":[{"name":"Verge"}]},"hierarchy":{"paths":[["doc:\/\/Verge\/documentation\/Verge","doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/init(initialValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/value"]},{"title":"Instance Methods","identifiers":["doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/compareAndSet(expect:newValue:)","doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/getAndSet(newValue:)"]}],"references":{"doc://Verge/documentation/Verge/VergeConcurrency/AtomicReference/compareAndSet(expect:newValue:)":{"role":"symbol","title":"compareAndSet(expect:newValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndSet"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expect"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Atomically sets the new value, if the current value’s memory pointer equals the"},{"type":"text","text":" "},{"type":"text","text":"expected value’s memory pointer."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/compareAndSet(expect:newValue:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/vergeconcurrency\/atomicreference\/compareandset(expect:newvalue:)"},"doc://Verge/documentation/Verge/VergeConcurrency/AtomicReference/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueType"}],"abstract":[{"type":"text","text":"The value that guarantees atomic read and write-through memory behavior."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/value","kind":"symbol","type":"topic","url":"\/documentation\/verge\/vergeconcurrency\/atomicreference\/value"},"doc://Verge/documentation/Verge/VergeConcurrency/AtomicReference/getAndSet(newValue:)":{"role":"symbol","title":"getAndSet(newValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAndSet"},{"kind":"text","text":"("},{"kind":"externalParam","text":"newValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ValueType"}],"abstract":[{"type":"text","text":"Atomically sets to the given new value and returns the old value."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/getAndSet(newValue:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/vergeconcurrency\/atomicreference\/getandset(newvalue:)"},"doc://Verge/documentation/Verge/VergeConcurrency/AtomicReference":{"role":"symbol","title":"VergeConcurrency.AtomicReference","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicReference"}],"abstract":[{"type":"text","text":"A concurrency utility class that supports locking-free synchronization on mutating an object"},{"type":"text","text":" "},{"type":"text","text":"reference. Unlike using a lock, concurrent read and write accesses to this class is allowed. At"},{"type":"text","text":" "},{"type":"text","text":"the same time, concurrent operations using the atomic functions provided by this class ensures"},{"type":"text","text":" "},{"type":"text","text":"synchronization correctness without the higher cost of locking."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomicReference"}],"url":"\/documentation\/verge\/vergeconcurrency\/atomicreference"},"doc://Verge/documentation/Verge/VergeConcurrency/AtomicReference/init(initialValue:)":{"role":"symbol","title":"init(initialValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ValueType"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializer."}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency\/AtomicReference\/init(initialValue:)","kind":"symbol","type":"topic","url":"\/documentation\/verge\/vergeconcurrency\/atomicreference\/init(initialvalue:)"},"doc://Verge/documentation/Verge/VergeConcurrency":{"role":"symbol","title":"VergeConcurrency","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"VergeConcurrency"}],"abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge\/VergeConcurrency","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VergeConcurrency"}],"url":"\/documentation\/verge\/vergeconcurrency"},"doc://Verge/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Verge\/s8SendableP"},"doc://Verge/documentation/Verge":{"role":"collection","title":"Verge","abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge","kind":"symbol","type":"topic","url":"\/documentation\/verge"}}}