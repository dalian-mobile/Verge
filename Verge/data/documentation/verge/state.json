{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"That state is managed by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Verge\/documentation\/Verge\/Store"},{"type":"text","text":". It process updating the state and notify updated events to the subscribers."}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Store DOES support multiple state-tree as well. Depending on the case, we can create another Store instance."}]}],"type":"aside","name":"Tip"},{"anchor":"Add-a-computed-property","level":2,"type":"heading","text":"Add a computed property"},{"type":"codeListing","syntax":null,"code":["struct State: Equatable {","","  var count: Int = 0","","  var countText: String {","    return count.description","  }","","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Extending properties that computes a value from stored property."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although in some of cases, the cost of computing might be higher which depends on how it create the value from stored properties."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Verge\/documentation\/Verge\/ExtendedStateType"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This provies us to get more stuff that "},{"type":"strong","inlineContent":[{"type":"text","text":"increases performance"}]},{"type":"text","text":" and productivity."}]},{"anchor":"Attention-to-Normalization","level":2,"type":"heading","text":"Attention to Normalization"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"If you put the data that has relation-ship or complicated structure into state tree, it would be needed normalization to keep performance. Please check VergeORM module"}]}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape\/"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/verge\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Verge\/documentation\/Verge\/State","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"VergeStore uses a "},{"type":"strong","inlineContent":[{"type":"text","text":"single state-tree. (Recommended)"}]},{"type":"text","text":" That means an object contains all of the application’s state. With this, we can get to achieve "},{"type":"strong","inlineContent":[{"type":"text","text":"“single source of truth”"}]}],"kind":"article","metadata":{"roleHeading":"Article","title":"Thinking in single state tree (Not enforced)","role":"article","modules":[{"name":"Verge"}]},"hierarchy":{"paths":[["doc:\/\/Verge\/documentation\/Verge"]]},"references":{"doc://Verge/documentation/Verge/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"An object that retains a latest state value and receives mutations that modify itself state."},{"type":"text","text":" "},{"type":"text","text":"Those updates would be shared all of the subscribers these are sink(s), Derived(s)"}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/verge\/store"},"https://redux.js.org/recipes/structuring-reducers/normalizing-state-shape/":{"title":"About more Normalization and why we need to do this","titleInlineContent":[{"type":"text","text":"About more Normalization and why we need to do this"}],"type":"link","identifier":"https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape\/","url":"https:\/\/redux.js.org\/recipes\/structuring-reducers\/normalizing-state-shape\/"},"doc://Verge/documentation/Verge":{"role":"collection","title":"Verge","abstract":[],"identifier":"doc:\/\/Verge\/documentation\/Verge","kind":"symbol","type":"topic","url":"\/documentation\/verge"},"doc://Verge/documentation/Verge/ExtendedStateType":{"role":"symbol","title":"ExtendedStateType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExtendedStateType"}],"abstract":[{"type":"text","text":"A protocol extended from StateType"}],"identifier":"doc:\/\/Verge\/documentation\/Verge\/ExtendedStateType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExtendedStateType"}],"url":"\/documentation\/verge\/extendedstatetype"}}}